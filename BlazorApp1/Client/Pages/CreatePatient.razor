@page "/create-patient"
@using Core.Models
@using Services

<div class="container my-5">
    <div class="card shadow-lg border-0 rounded-4">
        <div class="card-body p-5" style="background-color: #f9fafb;">
            <h3 class="text-center text-primary mb-4">🩺 <span class="fw-bold">Create New Patient</span></h3>

            <EditForm Model="newPatient" OnValidSubmit="HandleCreatePatient">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger mb-3" />

                <div class="mb-4">
                    <label class="form-label">MRN</label>
                    <InputText @bind-Value="newPatient.MRN" class="form-control rounded-pill border-primary" />
                </div>
                <div class="mb-4">
                    <label class="form-label">Full Name</label>
                    <InputText @bind-Value="newPatient.FullName" class="form-control rounded-pill border-primary" />
                </div>
                <div class="mb-4">
                    <label class="form-label">Mother Name</label>
                    <InputText @bind-Value="newPatient.MotherName" class="form-control rounded-pill border-primary" />
                </div>
                <div class="mb-4">
                    <label class="form-label">Transfer From</label>
                    <InputText @bind-Value="newPatient.TransferFrom" class="form-control rounded-pill border-primary" />
                </div>
                <div class="mb-4">
                    <label class="form-label">Birth Date</label>
                    <InputDate @bind-Value="newPatient.BirthDate" class="form-control rounded-pill border-primary" />
                </div>

                <div class="d-grid gap-2">
                   <button type="submit" class="btn btn-primary btn-lg rounded-3" style="background-color: #4a90e2; border-color: #4a90e2;">

                        <i class="fas fa-check me-2"></i>Create Patient
                    </button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private Patient newPatient = new Patient();

    [Inject]
    private PatientService PatientService { get; set; }

    [Inject]
    private NavigationManager NavigationManager { get; set; }

    private async Task HandleCreatePatient()
    {
        await PatientService.AddPatientAsync(newPatient);
        // Navigate back to the patient list page
        NavigationManager.NavigateTo("/patient-management");
    }
}
