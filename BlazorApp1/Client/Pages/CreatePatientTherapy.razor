@page "/create-patient-therapy"
@using Core.Models
@using Services
@inject PatientTherapyService PatientTherapyService
@inject PatientService PatientService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<div class="container my-5">
    <div class="card shadow-sm border-0 rounded-4 bg-white">
        <div class="card-body p-5" style="background-color: #f9fafb;">
            <h3 class="text-center text-primary mb-4">🧑‍⚕️ <span class="fw-bold">Create New Patient Therapy</span></h3>

            <EditForm Model="newPatientTherapy" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger mb-3" />

                <!-- Display error message if present -->
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }

                <div class="mb-3">
                    <label class="form-label">Patient</label>
                    <InputSelect @bind-Value="newPatientTherapy.PatientId" class="form-control rounded-pill border-primary">
                        <option value="">Select a patient</option>
                        @foreach (var patient in patients)
                        {
                            <option value="@patient.Id">@patient.FullName</option>
                        }
                    </InputSelect>
                </div>

                <div class="mb-3">
                    <label class="form-label">Number of Sessions</label>
                    <InputNumber @bind-Value="newPatientTherapy.NumberOfSessions" class="form-control rounded-pill border-primary" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Completed Sessions</label>
                    <InputNumber @bind-Value="newPatientTherapy.CompletedSessions" class="form-control rounded-pill border-primary" />
                </div>

                <div class="d-flex justify-content-center">
                    <button type="submit" class="btn btn-primary btn-lg rounded-3">
                        <i class="fas fa-check me-2"></i> Add Therapy
                    </button>
                    <button type="button" class="btn btn-secondary ms-2" @onclick="NavigateToPatientTherapies">Cancel</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private PatientTherapy newPatientTherapy = new PatientTherapy();
    private string errorMessage;
    private List<Patient> patients = new();

    protected override async Task OnInitializedAsync()
    {
        patients = await PatientService.GetPatientsAsync();
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await PatientTherapyService.AddPatientTherapyAsync(newPatientTherapy);
            NavigationManager.NavigateTo("/patient-therapies");
        }
        catch (Exception ex)
        {
            errorMessage = $"Error: {ex.Message}";
        }
    }

    private void NavigateToPatientTherapies()
    {
        NavigationManager.NavigateTo("/patient-therapies");
    }
}
